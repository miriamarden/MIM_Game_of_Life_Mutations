function [new_gen] = mutations_check_neighbors(current_gen)

new_gen = zeros(100,100); 
for_colors = ones(100,100);
dominant = 1; %input whether the mutation is dominant(1) or recessive(0)

for m = 2:99 %for rows 1 through 100
	for n = 2:99 %for columns 1 through 100
        neighbors = 0;
	%count number of neighbors%
		if current_gen(m-1,n-1) == 1
            neighbors = neighbors+1;
        end
        
		if current_gen(m-1,n) == 1
			neighbors = neighbors+1;
		end
	
		if current_gen(m-1,n+1) == 1
   			neighbors = neighbors+1;
		end
	
		if current_gen(m,n-1) == 1
			neighbors = neighbors+1;
		end
	
		if current_gen(m,n+1) == 1
			neighbors = neighbors+1;
		end
	
		if current_gen(m+1,n-1) == 1
			neighbors = neighbors+1;
		end
	
		if current_gen(m+1,n) == 1
			neighbors = neighbors+1;
		end
		
		if current_gen(m+1,n+1) == 1
           		neighbors = neighbors+1;
        end
        
       		%determine if cells should live or die
        	if current_gen(m,n) == 1
                if (neighbors < 2 || neighbors >3)
                		new_gen(m,n) = 0;
            	end
            
            	if (neighbors == 2 || neighbors == 3)
                		new_gen(m,n) = 1;
            	end 
        	elseif current_gen(m,n) == 0
            		if neighbors == 3
                		new_gen(m,n) = 1; 
                       
                    else
                		new_gen(m,n) = 0;
            		end
            
            end
    end
end

mutations_show_stuff(new_gen);
axis off
end
