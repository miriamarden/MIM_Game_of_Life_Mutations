function [] = two_mutations_game_of_life()
num_initial_mutations1 = 1000;
num_initial_mutations2 = 600;

%Set the color for the live cells
a=1;
b=1;
c=1;

%Set the color for the dead cells 
d=0;
e=0;
f=0;

%Set the color for the cells with mutation 1
g=1;
h=0;
i=0;

%Set the color for the cells with mutation 2
j=0;
k=0;
l=1;

%Set the color for cells with both mutations
p=1;
q=1;
r=0;

initial = ones(100,100);

current_gen = cat(3,d*initial, e*initial, f*initial);

red_channel = current_gen(:,:,1);
green_channel = current_gen(:,:,2);
blue_channel = current_gen(:,:,3);



num_alive = randi(10000);

%location of the alive cells
for alive = 1:num_alive
    mutation_location = [randi(100),randi(100)];
    red_channel(mutation_location(1),mutation_location(2)) = a;
    green_channel(mutation_location(1),mutation_location(2)) = b;
    blue_channel(mutation_location(1),mutation_location(2)) = c;
end



%locations of mutation 1
for mut = 1:num_initial_mutations1
    mutation_location = [randi(100),randi(100)];     
    
red_channel(mutation_location(1),mutation_location(2)) = g;
green_channel(mutation_location(1),mutation_location(2)) = h;
blue_channel(mutation_location(1),mutation_location(2)) = i;
end


%locations of mutation 2
for mut = 1:num_initial_mutations2
    mutation_location = [randi(100),randi(100)];     
red_channel(mutation_location(1),mutation_location(2)) = j;
green_channel(mutation_location(1),mutation_location(2)) = k;
blue_channel(mutation_location(1),mutation_location(2)) = l;
end


current_gen = cat(3,red_channel, green_channel, blue_channel);


while true
    [new_gen] = two_mutations_check_neighbors(current_gen);
    current_gen = new_gen;
    %pause(1)
end



end %end function
